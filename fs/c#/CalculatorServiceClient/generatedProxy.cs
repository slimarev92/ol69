//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace = "http://ilrd.WCF.CalcService", ConfigurationName = "ICalculator")]
public interface ICalculator
{

    [System.ServiceModel.OperationContractAttribute(Action = "http://ilrd.WCF.CalcService/ICalculator/Add", ReplyAction = "http://ilrd.WCF.CalcService/ICalculator/AddResponse")]
    int Add(int operand1, int operand2);

    [System.ServiceModel.OperationContractAttribute(Action = "http://ilrd.WCF.CalcService/ICalculator/Add", ReplyAction = "http://ilrd.WCF.CalcService/ICalculator/AddResponse")]
    System.Threading.Tasks.Task<int> AddAsync(int operand1, int operand2);

    [System.ServiceModel.OperationContractAttribute(Action = "http://ilrd.WCF.CalcService/ICalculator/Substract", ReplyAction = "http://ilrd.WCF.CalcService/ICalculator/SubstractResponse")]
    int Substract(int operand1, int operand2);

    [System.ServiceModel.OperationContractAttribute(Action = "http://ilrd.WCF.CalcService/ICalculator/Substract", ReplyAction = "http://ilrd.WCF.CalcService/ICalculator/SubstractResponse")]
    System.Threading.Tasks.Task<int> SubstractAsync(int operand1, int operand2);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ICalculatorChannel : ICalculator, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CalculatorClient : System.ServiceModel.ClientBase<ICalculator>, ICalculator
{

    public CalculatorClient()
    {
    }

    public CalculatorClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
    {
    }

    public CalculatorClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public CalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
    {
    }

    public CalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
    {
    }

    public int Add(int operand1, int operand2)
    {
        return base.Channel.Add(operand1, operand2);
    }

    public System.Threading.Tasks.Task<int> AddAsync(int operand1, int operand2)
    {
        return base.Channel.AddAsync(operand1, operand2);
    }

    public int Substract(int operand1, int operand2)
    {
        return base.Channel.Substract(operand1, operand2);
    }

    public System.Threading.Tasks.Task<int> SubstractAsync(int operand1, int operand2)
    {
        return base.Channel.SubstractAsync(operand1, operand2);
    }
}
